// <auto-generated />
using System;
using David_Studio_Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace David_Studio_Server.Migrations
{
    [DbContext(typeof(davidstudioContext))]
    partial class davidstudioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_general_ci")
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");

            modelBuilder.Entity("David_Studio_Server.Database.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ImgLink")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("img_link");

                    b.Property<int>("Popularity")
                        .HasColumnType("int")
                        .HasColumnName("popularity");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Popularity = 9,
                            Title = "Smart Home"
                        },
                        new
                        {
                            Id = 2,
                            Popularity = 10,
                            Title = "David Studio"
                        },
                        new
                        {
                            Id = 3,
                            Popularity = 5,
                            Title = "Steadicube"
                        },
                        new
                        {
                            Id = 4,
                            Popularity = 2,
                            Title = "Text Analyzer UBA"
                        });
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.ProjectImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "project_id");

                    b.ToTable("project_images", (string)null);
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.ProjectTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex(new[] { "ProjectId" }, "project_id")
                        .HasDatabaseName("project_id1");

                    b.HasIndex(new[] { "TagId" }, "tag_id");

                    b.ToTable("projects_tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProjectId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 3,
                            ProjectId = 1,
                            TagId = 4
                        },
                        new
                        {
                            Id = 4,
                            ProjectId = 1,
                            TagId = 5
                        },
                        new
                        {
                            Id = 5,
                            ProjectId = 1,
                            TagId = 6
                        },
                        new
                        {
                            Id = 6,
                            ProjectId = 1,
                            TagId = 7
                        });
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.ServiceTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TagId");

                    b.ToTable("ServicesTags");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("LongName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("long_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LongName" }, "long_name")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "name")
                        .IsUnique();

                    b.ToTable("tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            LongName = "ASP.NET Core",
                            Name = "ASP.NET"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Arduino"
                        },
                        new
                        {
                            Id = 4,
                            LongName = "Windows Presentation Foundation",
                            Name = "WPF"
                        },
                        new
                        {
                            Id = 5,
                            LongName = "Internet of Things",
                            Name = "IoT"
                        },
                        new
                        {
                            Id = 6,
                            Name = "PCB"
                        },
                        new
                        {
                            Id = 7,
                            Name = "MySQL"
                        },
                        new
                        {
                            Id = 8,
                            Name = "MSSQL"
                        },
                        new
                        {
                            Id = 9,
                            Name = "C++"
                        },
                        new
                        {
                            Id = 10,
                            LongName = "Bash Script",
                            Name = "Bash"
                        },
                        new
                        {
                            Id = 11,
                            LongName = "JavaScript",
                            Name = "JS"
                        },
                        new
                        {
                            Id = 12,
                            LongName = "TypeScript",
                            Name = "TS"
                        },
                        new
                        {
                            Id = 13,
                            Name = "JQuery"
                        },
                        new
                        {
                            Id = 14,
                            Name = "HTML"
                        },
                        new
                        {
                            Id = 15,
                            Name = "CSS"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bootstrap"
                        },
                        new
                        {
                            Id = 17,
                            LongName = "Entity Framework Core",
                            Name = "EF Core"
                        },
                        new
                        {
                            Id = 18,
                            LongName = "Windows Forms",
                            Name = "Win Forms"
                        },
                        new
                        {
                            Id = 19,
                            LongName = "Dedicated Hosting",
                            Name = "Dedicated"
                        },
                        new
                        {
                            Id = 20,
                            LongName = "Cloud Hosting",
                            Name = "Cloud"
                        });
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.ProjectImage", b =>
                {
                    b.HasOne("David_Studio_Server.Database.Models.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("project_images_ibfk_1");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.ProjectTag", b =>
                {
                    b.HasOne("David_Studio_Server.Database.Models.Project", "Project")
                        .WithMany("Tags")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("projects_tags_ibfk_1");

                    b.HasOne("David_Studio_Server.Database.Models.Service", null)
                        .WithMany("Tags")
                        .HasForeignKey("ServiceId");

                    b.HasOne("David_Studio_Server.Database.Models.Tag", "Tag")
                        .WithMany("Projects")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("projects_tags_ibfk_2");

                    b.Navigation("Project");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.ServiceTag", b =>
                {
                    b.HasOne("David_Studio_Server.Database.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("David_Studio_Server.Database.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.Project", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.Service", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("David_Studio_Server.Database.Models.Tag", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
